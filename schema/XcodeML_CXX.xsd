<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema
  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
  >

  <xsd:include schemaLocation="types.xsd" />
  <xsd:include schemaLocation="clang.xsd" />

  <!-- 2 Translation unit and XcodeProgram element -->
  <!-- FIXME: templateInstances element (テンプレートの展開結果)の仕様 -->
  <xsd:element name="XcodeProgram">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" ref="typeTable" />
        <xsd:element minOccurs="1" maxOccurs="1" ref="globalSymbols" />
        <xsd:element minOccurs="1" maxOccurs="1" ref="globalDeclarations" />
      </xsd:sequence>
      <xsd:attribute name="compiler-info" type="xsd:string" use="optional" />
      <xsd:attribute name="version" type="xsd:string" use="optional" />
      <xsd:attribute name="time" type="xsd:string" use="optional" />
      <xsd:attribute name="language" type="source-language" use="optional" />
      <xsd:attribute name="source" type="xsd:string" use="optional" />
    </xsd:complexType>
  </xsd:element>

  <!-- 4.1 id element/name element -->
  <xsd:element name="name" type="xsd:string" />

  <!-- 2.2 value element -->
  <xsd:element name="value">
    <xsd:complexType>
      <xsd:choice minOccurs="0" maxOccurs="unbounded">
        <xsd:group ref="expression-element" />
        <xsd:element ref="value" />
      </xsd:choice>
    </xsd:complexType>
  </xsd:element>

  <!-- 3 typeTable element and data type definition element -->
  <xsd:element name="typeTable">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group minOccurs="0" maxOccurs="unbounded"
          ref="data-type-defining-elements" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <!-- 3.2 typeName element -->
  <!-- FIXME: inheritedFrom element対応 -->
  <xsd:element name="typeName">
    <xsd:complexType>
      <xsd:attribute name="ref" type="data-type-identifier"
        use="required" />
      <xsd:attribute name="access" type="access-specifier" use="optional" />
    </xsd:complexType>
  </xsd:element>

  <xsd:attribute name="type" type="xsd:string" />

  <!-- 3.4 basicType element -->
  <!-- FIXME: alignas is nani???? -->
  <xsd:element name="basicType">
    <xsd:complexType>
      <xsd:attribute ref="type" use="required" />
      <xsd:attribute name="name" type="data-type-identifier" use="required" />
      <xsd:attribute name="alignas" type="xsd:string" />
      <xsd:attributeGroup ref="data-type-defining-element-attributes" />
    </xsd:complexType>
  </xsd:element>

  <!-- 3.5 pointerType element -->
  <xsd:element name="pointerType">
    <xsd:complexType>
      <xsd:attribute ref="type" use="required" />
      <xsd:attribute name="ref" type="xsd:string" use="required" />
      <xsd:attribute name="reference"
        type="reference-attribute-value" use="optional" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="functionType">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" ref="params" />
      </xsd:sequence>
      <xsd:attribute ref="type" use="required" />
      <xsd:attribute name="return_type" type="data-type-identifier"
        use="required" />
      <xsd:attribute name="is_inline" type="extended-boolean" default="false" />
    </xsd:complexType>
  </xsd:element>

  <!-- 3.7 arrayType element -->
  <!-- FIXME: arraySize xor array_size -->
  <!-- FIXME: default of attribute array_size -->
  <xsd:element name="arrayType">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="1" ref="arraySize" />
      </xsd:sequence>
      <xsd:attribute ref="type" use="required" />
      <xsd:attribute name="element_type" type="data-type-identifier"
        use="required" />
      <xsd:attribute name="array_size">
        <!-- non-negative integer or "*" -->
        <xsd:simpleType>
          <xsd:union memberTypes="xsd:nonNegativeInteger">
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:enumeration value="*" />
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:union>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attributeGroup ref="data-type-defining-element-attributes" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="arraySize">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <!-- 3.8 unionType element -->
  <xsd:element name="unionType">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" ref="symbols" />
      </xsd:sequence>
      <xsd:attribute ref="type" use="required" />
      <xsd:attributeGroup ref="data-type-defining-element-attributes" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="structType">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" ref="symbols" />
      </xsd:sequence>
      <xsd:attribute ref="type" use="required" />
      <xsd:attributeGroup ref="data-type-defining-element-attributes" />
      <xsd:attributeGroup ref="source-location-info" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="classType">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="1" ref="inheritedFrom" />
        <xsd:element minOccurs="1" maxOccurs="1" ref="symbols" />
        <xsd:element minOccurs="0" maxOccurs="1" ref="declarations" />
      </xsd:sequence>
      <xsd:attribute ref="type" use="required" />
      <xsd:attributeGroup ref="data-type-defining-element-attributes" />
      <xsd:attributeGroup ref="source-location-info" />
    </xsd:complexType>
  </xsd:element>

  <!-- 3.9.1 inheritedFrom element (C++) -->
  <xsd:element name="inheritedFrom">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="typeName" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <!-- 3.10 enumType element -->
  <xsd:element name="enumType">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="1" ref="name" />
        <xsd:element minOccurs="1" maxOccurs="1" ref="symbols" />
      </xsd:sequence>
      <xsd:attribute ref="type" use="required" />
      <xsd:attributeGroup ref="data-type-defining-element-attributes" />
    </xsd:complexType>
  </xsd:element>

  <!-- 3.11 parameterPack element (C++) -->
  <xsd:element name="parameterPack">
    <xsd:complexType>
      <xsd:attribute ref="type" use="required" />
      <xsd:attribute name="element_type" type="data-type-identifier"
        use="required" />
      <xsd:attributeGroup ref="data-type-defining-element-attributes" />
    </xsd:complexType>
  </xsd:element>

  <!-- 4.1 id element -->
  <xsd:element name="id">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" ref="name" />
        <xsd:element minOccurs="0" maxOccurs="1" ref="bitField" />
        <xsd:element minOccurs="0" maxOccurs="1" ref="alignAs" />
      </xsd:sequence>
      <xsd:attribute name="sclass" type="storage-class" />
      <xsd:attribute name="type" type="data-type-identifier" />
      <xsd:attribute name="bit_field" type="xsd:integer" />
      <xsd:attribute name="align_as" type="xsd:string" />
      <xsd:attribute name="is_inline" type="extended-boolean" />
      <xsd:attribute name="is_virtual" type="extended-boolean" />
      <xsd:attribute name="is_explicit" type="extended-boolean" />
      <xsd:attribute name="is_gccThread" type="extended-boolean" />
      <xsd:attribute name="is_gccExtension" type="extended-boolean" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="bitField">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="alignAs">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <!-- 4.2 globalSymbols element -->
  <xsd:element name="globalSymbols" type="id-element-list" />

  <!-- 4.3 symbols element -->
  <xsd:element name="symbols" type="id-element-list" />

  <!-- 5.1 globalDeclarations element -->
  <xsd:element name="globalDeclarations">
    <xsd:complexType>
      <xsd:choice minOccurs="0" maxOccurs="unbounded">
        <xsd:element ref="varDecl" />
        <xsd:element ref="functionDecl" />
        <xsd:element ref="usingDecl" />
        <xsd:element ref="functionDefinition" />
        <xsd:element ref="functionTemplate" />
        <xsd:element ref="text" />
      </xsd:choice>
    </xsd:complexType>
  </xsd:element>

  <!-- 5.2 declarations element -->
  <xsd:element name="declarations">
    <xsd:complexType>
      <xsd:choice minOccurs="0" maxOccurs="unbounded">
        <xsd:element ref="varDecl" />
        <xsd:element ref="functionDecl" />
        <xsd:element ref="usingDecl" />
        <xsd:element ref="functionDefinition" />
        <xsd:element ref="text" />
      </xsd:choice>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="functionDefinition">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:choice minOccurs="1" maxOccurs="1">
          <xsd:element ref="name" />
          <xsd:element ref="operator" />
          <xsd:element ref="constructor" />
          <xsd:element ref="destructor" />
          <xsd:element ref="conversion" />
        </xsd:choice>
        <xsd:element minOccurs="1" maxOccurs="1" ref="symbols" />
        <xsd:element minOccurs="1" maxOccurs="1" ref="params" />
        <xsd:element minOccurs="1" maxOccurs="1" ref="body" />
      </xsd:sequence>
      <xsd:attribute name="is_gccExtension" type="extended-boolean" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="body">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="statement-element" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <!-- 5.3 operator element (C++) -->
  <!-- FIXME: operatorString instead of string -->
  <xsd:element name="operator" type="xsd:string" />

  <!-- 5.3.2 constructor element (C++) -->
  <xsd:element name="constructor">
    <xsd:complexType>
      <xsd:sequence minOccurs="0" maxOccurs="unbounded">
        <xsd:element minOccurs="1" maxOccurs="1" ref="name" />
        <xsd:element minOccurs="1" maxOccurs="1" ref="value" />
      </xsd:sequence>
      <xsd:attribute name="is_explicit" type="extended-boolean" />
    </xsd:complexType>
  </xsd:element>

  <!-- 5.3.3 destructor element (C++) -->
  <xsd:element name="destructor" />

  <xsd:element name="conversion">
    <xsd:complexType>
      <xsd:attribute name="destination_type"
        type="data-type-identifier" use="required" />
    </xsd:complexType>
  </xsd:element>

  <!-- 5.3.4 params element -->
  <xsd:element name="params">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:sequence minOccurs="0" maxOccurs="unbounded">
          <xsd:element minOccurs="1" maxOccurs="1" ref="name" />
          <xsd:element minOccurs="1" maxOccurs="1" ref="value" />
        </xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="1" name="elipsis" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <!-- 5.4 varDecl element -->
  <xsd:element name="varDecl">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" ref="name" />
        <xsd:element minOccurs="0" maxOccurs="1" ref="value" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <!-- 5.5 functionDecl element -->
  <xsd:element name="functionDecl">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" ref="name" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <!-- 5.6 usingDecl element (C++) -->
  <!-- FIXME: more strong restriction -->
  <xsd:element name="usingDecl">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="name" />
      </xsd:sequence>
      <xsd:attribute name="namespace" type="extended-boolean" use="optional" />
      <xsd:attributeGroup ref="source-location-info" />
    </xsd:complexType>
  </xsd:element>

  <!-- 6.1 exprStatement element -->
  <xsd:element name="exprStatement">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group minOccurs="1" maxOccurs="1" ref="expression-element" />
      </xsd:sequence>
      <xsd:attributeGroup ref="source-location-info" />
    </xsd:complexType>
  </xsd:element>

  <!-- 6.2 compoundStatement element -->
  <xsd:element name="compoundStatement">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" ref="symbols" />
        <xsd:element minOccurs="1" maxOccurs="1" ref="declarations" />
        <xsd:element minOccurs="1" maxOccurs="1" ref="body" />
      </xsd:sequence>
      <xsd:attributeGroup ref="source-location-info" />
    </xsd:complexType>
  </xsd:element>

  <!-- 6.3 ifStatement element -->
  <xsd:element name="ifStatement">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" ref="condition" />
        <xsd:element minOccurs="1" maxOccurs="1" ref="then" />
        <xsd:element minOccurs="1" maxOccurs="1" ref="else" />
      </xsd:sequence>
      <xsd:attributeGroup ref="source-location-info" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="condition">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group minOccurs="1" maxOccurs="1" ref="expression-element" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="then">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group minOccurs="1" maxOccurs="1" ref="statement-element" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="else">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group minOccurs="1" maxOccurs="1" ref="statement-element" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <!-- 6.4 whileStatement element -->
  <xsd:element name="whileStatement">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" ref="condition" />
        <xsd:element minOccurs="1" maxOccurs="1" ref="body" />
      </xsd:sequence>
      <xsd:attributeGroup ref="source-location-info" />
    </xsd:complexType>
  </xsd:element>

  <!-- 6.5 doStatement element -->
  <xsd:element name="doStatement">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" ref="body" />
        <xsd:element minOccurs="1" maxOccurs="1" ref="condition" />
      </xsd:sequence>
      <xsd:attributeGroup ref="source-location-info" />
    </xsd:complexType>
  </xsd:element>

  <!--- 6.6 forStatement element -->
  <xsd:element name="forStatement">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="1" ref="init" />
        <xsd:element minOccurs="0" maxOccurs="1" ref="condition" />
        <xsd:element minOccurs="0" maxOccurs="1" ref="iter" />
        <xsd:element minOccurs="1" maxOccurs="1" ref="body" />
      </xsd:sequence>
      <xsd:attributeGroup ref="source-location-info" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="init">
    <xsd:complexType>
      <xsd:choice>
        <xsd:group ref="expression-element" />
        <xsd:element ref="symbols" />
      </xsd:choice>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="iter">
    <xsd:complexType>
      <xsd:choice>
        <xsd:group minOccurs="1" maxOccurs="1" ref="expression-element" />
        <xsd:element ref="symbols" />
      </xsd:choice>
    </xsd:complexType>
  </xsd:element>

  <!-- 6.7 rangeForStatement element -->
  <xsd:element name="rangeForStatement">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" ref="id" />
        <xsd:element minOccurs="1" maxOccurs="1" ref="range" />
        <xsd:element minOccurs="1" maxOccurs="1" ref="body" />
      </xsd:sequence>
      <xsd:attributeGroup ref="source-location-info" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="range">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group minOccurs="1" maxOccurs="1" ref="expression-element" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <!-- 6.8 breakStatement element -->
  <xsd:element name="breakStatement">
    <xsd:complexType>
      <xsd:attributeGroup ref="source-location-info" />
    </xsd:complexType>
  </xsd:element>

  <!-- 6.9 continueStatement element -->
  <xsd:element name="continueStatement">
    <xsd:complexType>
      <xsd:attributeGroup ref="source-location-info" />
    </xsd:complexType>
  </xsd:element>

  <!-- 6.10 returnStatement element -->
  <xsd:element name="returnStatement">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group minOccurs="1" maxOccurs="1" ref="expression-element" />
      </xsd:sequence>
      <xsd:attributeGroup ref="source-location-info" />
    </xsd:complexType>
  </xsd:element>

  <!-- 6.11 gotoStatement element -->
  <xsd:element name="gotoStatement">
    <xsd:complexType>
      <xsd:choice>
        <xsd:element ref="name" />
        <xsd:group minOccurs="1" maxOccurs="1" ref="expression-element" />
      </xsd:choice>
      <xsd:attributeGroup ref="source-location-info" />
    </xsd:complexType>
  </xsd:element>

  <!-- 6.12 tryStatement element -->
  <xsd:element name="tryStatement">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" ref="body" />
      </xsd:sequence>
      <xsd:attributeGroup ref="source-location-info" />
    </xsd:complexType>
  </xsd:element>

  <!-- 6.14 catchStatement element -->
  <xsd:element name="catchStatement">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" ref="params" />
        <xsd:element minOccurs="1" maxOccurs="1" ref="body" />
      </xsd:sequence>
      <xsd:attributeGroup ref="source-location-info" />
    </xsd:complexType>
  </xsd:element>

  <!-- 6.15 statementLabel element -->
  <xsd:element name="statementLabel">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" ref="name" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <!-- 6.16 switchStatement element -->
  <xsd:element name="switchStatement">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" ref="value" />
        <xsd:element minOccurs="1" maxOccurs="1" ref="body" />
      </xsd:sequence>
      <xsd:attributeGroup ref="source-location-info" />
    </xsd:complexType>
  </xsd:element>

  <!-- 6.17 caseLabel element -->
  <xsd:element name="caseLabel">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" ref="value" />
      </xsd:sequence>
      <xsd:attributeGroup ref="source-location-info" />
    </xsd:complexType>
  </xsd:element>

  <!-- 6.18 gccRangedCaseLabel element -->
  <xsd:element name="gccRangedCaseLabel">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" ref="value" />
        <xsd:element minOccurs="1" maxOccurs="1" ref="value" />
      </xsd:sequence>
      <xsd:attributeGroup ref="source-location-info" />
    </xsd:complexType>
  </xsd:element>

  <!-- 6.19 defaultLabel element -->
  <xsd:element name="defaultLabel">
    <xsd:complexType>
      <xsd:attributeGroup ref="source-location-info" />
    </xsd:complexType>
  </xsd:element>

  <!-- 6.20 pragma element -->
  <xsd:element name="pragma">
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attributeGroup ref="source-location-info" />
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>

  <!-- 6.21 text element -->
  <xsd:element name="text">
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attributeGroup ref="source-location-info" />
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>

  <!-- 7.1 constant element -->
  <xsd:element name="intConstant">
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attributeGroup ref="expression-element-attributes" />
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="longlongConstant">
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attributeGroup ref="expression-element-attributes" />
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="floatConstant">
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attributeGroup ref="expression-element-attributes" />
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="stringConstant">
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attributeGroup ref="expression-element-attributes" />
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="moeConstant">
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attributeGroup ref="expression-element-attributes" />
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="booleanConstant">
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attributeGroup ref="expression-element-attributes" />
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="funcAddr">
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attributeGroup ref="expression-element-attributes" />
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>

  <!-- 7.2 variable reference element (Var, varAddr arrayAddr) -->
  <xsd:element name="Var">
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attributeGroup ref="expression-element-attributes" />
          <xsd:attribute name="scope" type="variable-scope" use="required" />
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="addrOfExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
      <xsd:attribute ref="type" use="required" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="arrayAddr">
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attributeGroup ref="expression-element-attributes" />
          <xsd:attribute name="scope" type="variable-scope" use="required" />
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="pointerRef">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
      <xsd:attributeGroup ref="expression-element-attributes" />
      <xsd:attribute name="is_expedient" type="extended-boolean" default="false" />
    </xsd:complexType>
  </xsd:element>

  <!-- 7.4 arrayRef element -->
  <xsd:element name="arrayRef">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" ref="arrayAddr" />
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
      <xsd:attributeGroup ref="expression-element-attributes" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="memberRef">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
      <xsd:attribute name="member" type="xsd:string" use="required" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="memberArrayRef">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
      <xsd:attribute name="member" type="xsd:string" use="required" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="memberPointer">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
      <xsd:attribute name="name" type="xsd:string" use="required" />
      <xsd:attributeGroup ref="expression-element-attributes" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="compoundValue">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="value" />
      </xsd:sequence>
      <xsd:attributeGroup ref="expression-element-attributes" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="compoundValueAddr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="value" />
      </xsd:sequence>
      <xsd:attributeGroup ref="expression-element-attributes" />
    </xsd:complexType>
  </xsd:element>

  <!-- 7.8 thisExpr element -->
  <xsd:element name="thisExpr" />

  <!-- 7.9 assignExpr element -->
  <xsd:element name="assignExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
      <xsd:attributeGroup ref="expression-element-attributes" />
      <xsd:attribute name="is_userDefined" type="extended-boolean" default="false" />
    </xsd:complexType>
  </xsd:element>

  <!-- 7.10 binary operation elements -->
  <xsd:element name="plusExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
      <xsd:attributeGroup ref="expression-element-attributes" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="minusExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
      <xsd:attributeGroup ref="expression-element-attributes" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="mulExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
      <xsd:attributeGroup ref="expression-element-attributes" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="divExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
      <xsd:attributeGroup ref="expression-element-attributes" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="modExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
      <xsd:attributeGroup ref="expression-element-attributes" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="LshiftExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
      <xsd:attributeGroup ref="expression-element-attributes" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="RshiftExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
      <xsd:attributeGroup ref="expression-element-attributes" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="bitAndExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
      <xsd:attributeGroup ref="expression-element-attributes" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="bitOrExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
      <xsd:attributeGroup ref="expression-element-attributes" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="bitXorExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
      <xsd:attributeGroup ref="expression-element-attributes" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="asgPlusExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
      <xsd:attributeGroup ref="expression-element-attributes" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="asgMinusExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
      <xsd:attributeGroup ref="expression-element-attributes" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="asgMulExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
      <xsd:attributeGroup ref="expression-element-attributes" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="asgDivExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
      <xsd:attributeGroup ref="expression-element-attributes" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="asgModExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
      <xsd:attributeGroup ref="expression-element-attributes" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="asgLshiftExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
      <xsd:attributeGroup ref="expression-element-attributes" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="asgRshiftExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
      <xsd:attributeGroup ref="expression-element-attributes" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="asgBitAndExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
      <xsd:attributeGroup ref="expression-element-attributes" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="asgBitOrExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
      <xsd:attributeGroup ref="expression-element-attributes" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="asgBitXorExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
      <xsd:attributeGroup ref="expression-element-attributes" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="logEQExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
      <xsd:attributeGroup ref="expression-element-attributes" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="logNEQExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
      <xsd:attributeGroup ref="expression-element-attributes" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="logGEExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
      <xsd:attributeGroup ref="expression-element-attributes" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="logGTExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
      <xsd:attributeGroup ref="expression-element-attributes" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="logLEExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
      <xsd:attributeGroup ref="expression-element-attributes" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="logLTExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
      <xsd:attributeGroup ref="expression-element-attributes" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="logAndExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
      <xsd:attributeGroup ref="expression-element-attributes" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="logOrExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
      <xsd:attributeGroup ref="expression-element-attributes" />
    </xsd:complexType>
  </xsd:element>

  <!-- 7.11 unary operation elements -->
  <xsd:element name="unaryMinusExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
      <xsd:attributeGroup ref="expression-element-attributes" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="bitNotExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
      <xsd:attributeGroup ref="expression-element-attributes" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="logNotExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
      <xsd:attributeGroup ref="expression-element-attributes" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="sizeOfExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
      <xsd:attributeGroup ref="expression-element-attributes" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="alignOfExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
      <xsd:attributeGroup ref="expression-element-attributes" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="typeidExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
      <xsd:attributeGroup ref="expression-element-attributes" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="gccAlignOfExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
      <xsd:attributeGroup ref="expression-element-attributes" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="gccLabelAddr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
      <xsd:attributeGroup ref="expression-element-attributes" />
    </xsd:complexType>
  </xsd:element>

  <!-- 7.12 functionCall element -->
  <xsd:element name="functionCall">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" ref="function" />
        <xsd:element minOccurs="1" maxOccurs="1" ref="arguments" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="function">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <!-- 7.12.1 arguments element -->
  <xsd:element name="arguments">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <!-- 7.13 commaExpr element -->
  <xsd:element name="commaExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <!-- 7.14 increment/decrement elements -->
  <xsd:element name="postIncrExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="preIncrExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="postDecrExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="preDecrExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="castExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <!-- 7.16 cast elements -->
  <xsd:element name="staticCast">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="dynamicCast">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="constCast">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="reinterpretCast">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="implicitCastExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <!-- 7.17 condExpr elements -->
  <xsd:element name="condExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <!-- 7.18 gccCompoundExpr -->
  <xsd:element name="gccCompoundExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" ref="compoundStatement" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <!-- 7.19 newExpr -->
  <xsd:element name="newExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" ref="arguments" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="newArrayExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <!-- 7.20 deleteExpr -->
  <xsd:element name="deleteExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="deleteArrayExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="throwExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:group ref="expression-element" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="lambdaExpr">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="captures" minOccurs="1" maxOccurs="1" />
        <xsd:element ref="symbols" minOccurs="1" maxOccurs="1" />
        <xsd:element ref="params" minOccurs="1" maxOccurs="1" />
        <xsd:element ref="body" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="captures">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="byReference" minOccurs="1" maxOccurs="1" />
        <xsd:element ref="byValue" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="byReference">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="name" minOccurs="0" maxOccurs="unbounded" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="byValue">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="name" minOccurs="0" maxOccurs="unbounded" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="classTemplate">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="symbols" minOccurs="1" maxOccurs="1" />
        <xsd:element name="typeParams" minOccurs="1" maxOccurs="1" />
        <xsd:element name="classType" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="functionTemplate">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="symbols" minOccurs="1" maxOccurs="1" />
        <xsd:element name="typeParams" minOccurs="1" maxOccurs="1" />
        <xsd:element name="functionDefinition" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="aliasTemplate">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="symbols" minOccurs="1" maxOccurs="1" />
        <xsd:element name="typeParams" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="typeArguments">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="typeName" minOccurs="0" maxOccurs="unbounded" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="typeInstance">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="typeArguments" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="functionInstance">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="typeArguments" minOccurs="1" maxOccurs="1" />
        <xsd:element ref="functionCall" minOccurs="1" maxOccurs="1" />
      </xsd:sequence>
      <xsd:attribute ref="type" use="required" />
      <!-- FIXME attribute? -->
      <xsd:attribute name="name" type="xsd:string" use="required" />
    </xsd:complexType>
  </xsd:element>
</xsd:schema>
